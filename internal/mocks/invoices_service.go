// Code generated by MockGen. DO NOT EDIT.
// Source: ./vendor/github.com/serverscom/serverscom-go-client/pkg/invoices.go
//
// Generated by this command:
//
//	mockgen --destination ./internal/mocks/invoices_service.go --package=mocks --source ./vendor/github.com/serverscom/serverscom-go-client/pkg/invoices.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	serverscom "github.com/serverscom/serverscom-go-client/pkg"
	gomock "go.uber.org/mock/gomock"
)

// MockInvoiceService is a mock of InvoiceService interface.
type MockInvoiceService struct {
	ctrl     *gomock.Controller
	recorder *MockInvoiceServiceMockRecorder
	isgomock struct{}
}

// MockInvoiceServiceMockRecorder is the mock recorder for MockInvoiceService.
type MockInvoiceServiceMockRecorder struct {
	mock *MockInvoiceService
}

// NewMockInvoiceService creates a new mock instance.
func NewMockInvoiceService(ctrl *gomock.Controller) *MockInvoiceService {
	mock := &MockInvoiceService{ctrl: ctrl}
	mock.recorder = &MockInvoiceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvoiceService) EXPECT() *MockInvoiceServiceMockRecorder {
	return m.recorder
}

// Collection mocks base method.
func (m *MockInvoiceService) Collection() serverscom.Collection[serverscom.InvoiceList] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Collection")
	ret0, _ := ret[0].(serverscom.Collection[serverscom.InvoiceList])
	return ret0
}

// Collection indicates an expected call of Collection.
func (mr *MockInvoiceServiceMockRecorder) Collection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Collection", reflect.TypeOf((*MockInvoiceService)(nil).Collection))
}

// GetBillingInvoice mocks base method.
func (m *MockInvoiceService) GetBillingInvoice(ctx context.Context, id string) (*serverscom.Invoice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBillingInvoice", ctx, id)
	ret0, _ := ret[0].(*serverscom.Invoice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBillingInvoice indicates an expected call of GetBillingInvoice.
func (mr *MockInvoiceServiceMockRecorder) GetBillingInvoice(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBillingInvoice", reflect.TypeOf((*MockInvoiceService)(nil).GetBillingInvoice), ctx, id)
}
